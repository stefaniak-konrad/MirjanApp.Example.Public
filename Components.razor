@page "/"

@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Http
@using Microsoft.AspNetCore.WebUtilities
@using System.Collections.Generic;
@using Microsoft.AspNetCore.Authorization;
@using Microsoft.AspNetCore.Authentication.Cookies;
@using System.Threading.Tasks;
@using Mirjan24.Web.Data
@using Mirjan24.ServiceLayer.DTO
@using Serilog
@inject IJSRuntime JSRuntime
@inject Mirjan24.ServiceLayer.Mirjan24ServiceClient Client
@inject NavigationManager nav
@inject HttpContextAccessor httpContext
@inject AuthenticationStateProvider AuthenticationStateProvider

<style>
    .show {
        animation-duration: 0s;
    }
    .mylabel{
        margin-top:6px;
    }
    .w10 {
        width: 10%;
    }
    .infos {
        width: 700%;
        margin-left: -20px;
    }
    .w20{
        width:20%;
        text-align:center;
    }
    .mb20 {
        margin-bottom: 20px;
    }
</style>    
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
</head>
<div id="container" class="container-fluid containerWidther">
    <div class="row" style="margin-bottom:10px;">
        <div class="card col-md-12">
            <div class="card-header cartMinus">
                <span>Filtr</span>
            </div>
            <div class="card-body cartMinus" style="overflow-x:auto;">
                <table class="col-md-12">
                    <tr>
                        <td class="w20">
                            <span>Typ dokumentu</span>
                        </td>
                        <td class="w20">
                            <span>Status pobrania</span>
                        </td>
                        <td class="w20">
                            <span>NIP/PESEL</span>
                        </td>
                        <td class="w20">
                            <span>Nr zamówienia</span>
                        </td>
                        <td class="w20">
                            <span>Data wystawienia od</span>
                        </td>
                    </tr>
                    <tr>
                        <td class="w20">
                            <select @onchange="TypDokumentu" style="width:165px">
                                <option selected value="wybierz">Wybierz</option>
                                <option value="Paragon">Paragon</option>
                                <option value="Faktura VAT">Faktura VAT</option>
                            </select>
                        </td>
                        <td class="w20">
                            <select @onchange="StatusPobrania" style="width:165px">
                                <option selected value="wybierz">Wybierz</option>
                                <option value="Pobrane">Pobrane</option>
                                <option value="Nie Pobrane">Nie pobrane</option>
                            </select>
                        </td>
                        <td class="w20">
                            <input type="text" style="max-width:165px" />
                        </td>
                        <td class="w20">
                            <input type="text" style="max-width:165px" @bind-value="numerDoc" />
                        </td>
                        <td class="w20">
                            <input type="date" @bind-value="@_DatWystOd" />
                        </td>
                    </tr>
                    <tr>
                        <td class="w20">
                            <span>Data wystawienia do</span>
                        </td>
                        <td class="w20">
                            <span>Data umieszczenia na portalu od</span>
                        </td>
                        <td class="w20">
                            <span>Data umieszczenia na portalu do</span>
                        </td>
                        <td class="w20">
                            <span>Data pobrania od</span>
                        </td>
                        <td class="w20">
                            <span>Data pobrania do</span>
                        </td>
                    </tr>
                    <tr>
                        <td class="w20">
                            <input type="date" @bind-value="@_DatWystDo" />
                        </td>
                        <td class="w20">
                            <input type="date" @bind-value="@_DatUmNaPortOd" />
                        </td>
                        <td class="w20">
                            <input type="date" @bind-value="@_DatUmNaPortDo" />
                        </td>
                        <td class="w20">
                            <input type="date" @bind-value="@_DatPobrOd" />
                        </td>
                        <td class="w20">
                            <input type="date" @bind-value="@_DatPobrDo" />
                        </td>
                    </tr>
                </table>
                <br />
                <div style="float:right">
                    <button type="button" class="btn btn-danger" @onclick="Szukaj">Szukaj</button>
                    <button type="button" class="btn btn-dark" @onclick="Wyczysc">Wyczyść</button>
                </div>
                <br />
            </div>
        </div>
    </div>

    <div class="row" id="accordionExample" style="border-radius: 5px; margin-bottom:10px;">
        <div class="col-md-12 box accordion">
            <div class="table-responsive" style="overflow-x:auto;">
                <table class="table table-striped table-sm">
                    <thead>
                        <tr>
                            <th style="width:14%;">
                                <div class="dropdown">
                                    <button class="btn dropdown-toggle" type="button" id="dropdownMenu2" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" style="margin-bottom: -8px;">
                                        <strong>Data zamówienia</strong>
                                    </button>
                                    <div class="dropdown-menu" aria-labelledby="dropdownMenu2" style="width:max-content;">
                                        <button class="dropdown-item" type="button" @onclick="@(e =>Sortowanie("Rosnąco"))">Najstarsze</button>
                                        <button class="dropdown-item" type="button" @onclick="@(e =>Sortowanie("Malejąco"))">Najnowsze</button>
                                    </div>
                                </div>
                            </th>
                            <th style="width:17%;">Numer zamówienia klienta</th>
                            <th style="width:13%;">Numer zamówienia</th>
                            <th style="width:26%;">Płatniak</th>
                            <th style="width:8%;">Cena netto</th>
                            <th style="width:5%;">Waluta</th>
                            <th style="width:12%;">System sprzedaży</th>
                            <th style="width:5%">Pobierz</th>
                        </tr>
                    </thead>
                    @foreach (var dokument in DaneDokumentow)
                    {
                        var cena = dokument.CenaBrutto * 3;
                        <tbody>
                            <tr>
                                <td>
                                    <div class="dropdown">
                                        <button class="btn btn-link btn-block text-left collapsed dropdown-toggle" type="button" data-toggle="collapse" data-target="#collapse_@dokument.Id" aria-expanded="false" aria-controls="collapseTwo" @onclick="@(e =>GetPozycje(dokument.Id))" style="color:red;">
                                            @dokument.DataZamowienia.ToShortDateString()
                                        </button>
                                    </div>
                                </td>
                                <td><label class="mylabel">@dokument.NumerZamowieniaKlienta</label></td>
                                <td><label class="mylabel">@dokument.NumerZamowienia</label></td>
                                <td><label class="mylabel">@dokument.Platnik</label></td>
                                <td><label class="mylabel">@dokument.CenaBrutto</label></td>
                                <td><label class="mylabel">@dokument.Waluta</label></td>
                                <td><label class="mylabel">@dokument.SystemSprzedazy</label></td>
                                <td style="text-align:center">
                                    <button type="button" class="btn btn-danger" id="download" alt="pobierz" @onclick="@(e => Download(dokument.Id))">
                                        <svg width="1em" height="1em" viewBox="0 0 16 16" class="bi bi-download" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                                            <path fill-rule="evenodd" d="M.5 9.9a.5.5 0 0 1 .5.5v2.5a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1v-2.5a.5.5 0 0 1 1 0v2.5a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2v-2.5a.5.5 0 0 1 .5-.5z" />
                                            <path fill-rule="evenodd" d="M7.646 11.854a.5.5 0 0 0 .708 0l3-3a.5.5 0 0 0-.708-.708L8.5 10.293V1.5a.5.5 0 0 0-1 0v8.793L5.354 8.146a.5.5 0 1 0-.708.708l3 3z" />
                                        </svg>
                                    </button>
                                </td>
                            </tr>
                        </tbody>
                        <div id="collapse_@dokument.Id" class="collapse" aria-labelledby="headingTwo" data-parent="#accordionExample">
                            <div class="card-body infos" style="">
                                <div style="text-align:center; overflow-x:auto;">
                                    <li class="row">
                                        <strong class="column w10">EAN13</strong>
                                        <strong class="column w10 border-left">Nazwa bazowa</strong>
                                        <strong class="column w10 border-left">Wykończenie</strong>
                                        <strong class="column w10 border-left">Cena</strong>
                                        <strong class="column w10 border-left">Ilość</strong>
                                        <strong class="column w10 border-left">Wartość</strong>
                                        <strong class="column w10 border-left">Zestaw</strong>
                                        <strong class="column w10 border-left">Tryb dostawy</strong>
                                        <strong class="column w10 border-left">Maks. czas oczekiwania</strong>
                                        <strong class="column w10 border-left">Numer asortymentu</strong>
                                    </li>
                                    <li class="row mb20">
                                        <div class="column w10">1234</div>
                                        <div class="column w10 border-left">Nazwa test</div>
                                        <div class="column w10 border-left">satyna</div>
                                        <div class="column w10 border-left">@dokument.CenaBrutto</div>
                                        <div class="column w10 border-left">3</div>
                                        <div class="column w10 border-left">@cena</div>
                                        <div class="column w10 border-left">Tak</div>
                                        <div class="column w10 border-left">Tryb dostawy</div>
                                        <div class="column w10 border-left">14 dni</div>
                                        <div class="column w10 border-left">9601</div>
                                    </li>
                                </div>
                            </div>
                        </div>
                    }
                </table>
            </div>
        </div>
    </div>

</div>


@code {
    [CascadingParameter] CartStateProvider CartStateProvider { get; set; }

    List<DaneDokumentowDTO> DaneDokumentow;
    List<PozycjeZamowienDTO> pozycjeZamowien;
    public string numerDoc = "";

    [Authorize(AuthenticationSchemes = CookieAuthenticationDefaults.AuthenticationScheme)]
    protected override void OnInitialized()
    {
        try
        {
            //zapisane UserId w pamięci lokalnej
            var uri = nav.ToAbsoluteUri(nav.Uri);
            var i = QueryHelpers.ParseQuery(uri.Query).TryGetValue("x", out var idUser);
            if (nav.Uri != $"{nav.BaseUri}")
            {
                // utwóż nową pozycje userId
                var item = new UserModel
                {
                    UserId = Convert.ToInt32(idUser)
                };
                // dodaj do pamięci lokalnej
                CartStateProvider.userModel = item;
                // zapisz w pamiei lokalnej
                CartStateProvider.SaveUserId();
                Log.Information($"Użytkownik o id {CartStateProvider.userModel.UserId} został zapisany w pamieci lokalnej");
            }

            //pobieranie zamówień klienta
            DaneDokumentow = new List<DaneDokumentowDTO>();
            DaneDokumentow = Client.GetDane(CartStateProvider.userModel.UserId);
            //sortuj od najnowszych
            DaneDokumentow = DaneDokumentow.OrderByDescending(c => c.DataZamowienia).ToList();
            Log.Information("Dane dokumentów zostały pobrane");
        }
        catch (Exception ex)
        {
            Log.Error(ex.Message);
        }
    }

    int liczba;
    [Authorize(AuthenticationSchemes = CookieAuthenticationDefaults.AuthenticationScheme)]
    public async Task GetPozycje(int idPozycje)
    {
        try
        {
            if(idPozycje != liczba)
            {
                liczba = idPozycje;
                //TODO: pobieranie pozycji zamówienia
                pozycjeZamowien = new List<PozycjeZamowienDTO>();
                //tutaj pobieramy zamowienie po id z MirjanClient
                pozycjeZamowien = Client.GetPozycje(idPozycje).ToList();
            }
        }
        catch (Exception ex)
        {
            Log.Error(ex.Message);
        }

    }

    [Authorize(AuthenticationSchemes = CookieAuthenticationDefaults.AuthenticationScheme)]
    public async Task Wyczysc()
    {
        typDokumentu = "Wybierz";
        statusPobania = "Wybierz";
        numerDoc = "";
        DatPobrDo = DateTime.Now;
        DatPobrOd = DateTime.Now;
        DatUmNaPortDo = DateTime.Now;
        DatUmNaPortOd = DateTime.Now;
        DatWystDo = DateTime.Now;
        DatWystOd = DateTime.Now;

        //pobieranie dokumentów klienta
        DaneDokumentow = new List<DaneDokumentowDTO>();
        DaneDokumentow = Client.GetDane(CartStateProvider.userModel.UserId);
    }

    //filtrowanie wyszukiwania
    [Authorize(AuthenticationSchemes = CookieAuthenticationDefaults.AuthenticationScheme)]
    public async Task Szukaj()
    {
        try
        {
            DaneDokumentow = new List<DaneDokumentowDTO>();
            DaneDokumentow = Client.GetDane(CartStateProvider.userModel.UserId);

            if (DatWystOd.Date != DateTime.Today)
            {
                var daneDokumentowDTO = DaneDokumentow.FindAll(c => c.DataWystawienia >= DatWystOd);
                DaneDokumentow = daneDokumentowDTO;
            }
            if (DatWystDo.Date != DateTime.Today)
            {
                var daneDokumentowDTO = DaneDokumentow.FindAll(c => c.DataWystawienia <= DatWystDo);
                DaneDokumentow = daneDokumentowDTO;
            }
            if (DatPobrOd.Date != DateTime.Today)
            {
                var daneDokumentowDTO = DaneDokumentow.FindAll(c => c.DataPobrania >= DatPobrOd);
                DaneDokumentow = daneDokumentowDTO;
            }
            if (DatPobrDo.Date != DateTime.Today)
            {
                var daneDokumentowDTO = DaneDokumentow.FindAll(c => c.DataPobrania <= DatPobrDo);
                DaneDokumentow = daneDokumentowDTO;
            }
            if (DatUmNaPortDo.Date != DateTime.Today)
            {
                var daneDokumentowDTO = DaneDokumentow.FindAll(c => c.DataUmieszczeniaNaPortalu >= DatUmNaPortOd);
                DaneDokumentow = daneDokumentowDTO;
            }
            if (DatUmNaPortOd.Date != DateTime.Today)
            {
                var daneDokumentowDTO = DaneDokumentow.FindAll(c => c.DataUmieszczeniaNaPortalu <= DatUmNaPortDo);
                DaneDokumentow = daneDokumentowDTO;
            }
            if (numerDoc != "")
            {
                var daneDokumentowDTO = DaneDokumentow.FindAll(c => c.NumerZamowienia == numerDoc);
                DaneDokumentow = daneDokumentowDTO;
            }
            if (statusPobania == "Pobrane" || statusPobania == "Nie Pobrane")
            {

            }
            if (typDokumentu == "Faktura VAT" || typDokumentu == "Paragon")
            {
                var daneDokumentowDTO = DaneDokumentow.FindAll(c => c.RodzajDokumentu == typDokumentu.ToLower());
                DaneDokumentow = daneDokumentowDTO;
            }
        }
        catch (Exception ex)
        {
            Serilog.Log.Error(ex.Message);
        }
    }

    [Authorize(AuthenticationSchemes = CookieAuthenticationDefaults.AuthenticationScheme)]
    public async Task Download(long id)
    {
        //funkcje pobierania dokumentu pdf
    }

    [Authorize(AuthenticationSchemes =CookieAuthenticationDefaults.AuthenticationScheme)]
    public async Task Sortowanie(string sortowanie)
    {
        if(sortowanie == "Rosnąco")
        {
            DaneDokumentow = DaneDokumentow.OrderBy(c => c.DataZamowienia).ToList();
        }
        if(sortowanie == "Malejąco")
        {
            DaneDokumentow = DaneDokumentow.OrderByDescending(c => c.DataZamowienia).ToList();
        }
    }

    //funkcjonalność okien z datami
    public DateTime DatWystOd = DateTime.Now;
    public DateTime _DatWystOd
    {
        get { return DatWystOd; }
        set
        {
            DatWystOd = value;
        }
    }
    public DateTime DatWystDo = DateTime.Now;
    public DateTime _DatWystDo
    {
        get { return DatWystDo; }
        set
        {
            DatWystDo = value;
        }
    }
    public DateTime DatUmNaPortOd = DateTime.Now;
    public DateTime _DatUmNaPortOd
    {
        get { return DatUmNaPortOd; }
        set
        {
            DatUmNaPortOd = value;
        }
    }
    public DateTime DatUmNaPortDo = DateTime.Now;
    public DateTime _DatUmNaPortDo
    {
        get { return DatUmNaPortDo; }
        set
        {
            DatUmNaPortDo = value;
        }
    }
    public DateTime DatPobrOd = DateTime.Now;
    public DateTime _DatPobrOd
    {
        get { return DatPobrOd; }
        set
        {
            DatPobrOd = value;
        }
    }
    public DateTime DatPobrDo = DateTime.Now;
    public DateTime _DatPobrDo
    {
        get { return DatPobrDo; }
        set
        {
            DatPobrDo = value;
        }
    }

    //funkcjonalność list rozwijanych
    public string typDokumentu;
    public void TypDokumentu(ChangeEventArgs args)
    {
        typDokumentu = args.Value.ToString();
    }

    public string statusPobania;
    public void StatusPobrania(ChangeEventArgs args)
    {
        statusPobania = args.Value.ToString();
    }

}
